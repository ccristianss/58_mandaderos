Todos los comandos van a empezar con git

Configuracion inicial de GIT al instalar

git config --global user.name "John Doe"
git config --global user.email johndoe@example.com

git status
>Para saber el estado

git clone
>para descargar una copia local de un repositorio
> se le debe pasar la URL del repositorio que deseo clonar

git add
>para agregar los cambios localmente, todos los archivos o cambios realizados sobre la carpeta
> se le debe pasar parametros, puede ser el nombre de un archivo especifico, o en caso de algo se puede poner punto (.) para añadir todos los cambios

git commit
>para crear un punto de control, guardar los cambios realizados hasta cierto punto o en cierto tiempo. son nodos donde puedo deshacer los cambios realizados
>se le debe pasar el parametros -m "comentario", se recomienda colocar una descripcion de lo que se esta haciendo para identificar los cambios realizados en ese punto

git push
>toma los cambios realizados en cada commit y los sube al repositorio en la nube.

git pull
>Descargar los cambios realizados en el repositorio

https://git-scm.com/book/es/v2/Inicio---Sobre-el-Control-de-Versiones-Configurando-Git-por-primera-vez

https://git-scm.com/book/es/v2/Personalizaci%C3%B3n-de-Git-Configuraci%C3%B3n-de-Git




git config --list
>para mostrar todas las propiedades que Git ha configurado

user.signingkey
Si tienes costumbre de firmar tus etiquetas (tal y como se ha visto en Firmando tu trabajo), configurar tu clave de firma GPG puede facilitarte la labor. Puedes configurar tu clave ID de esta forma:

git config --global user.signingkey <gpg-key-id>
Ahora podrás firmar etiquetas sin necesidad de indicar tu clave cada vez en el comando git tag.

git tag -s <tag-name>